#pragma once

#include <unordered_map>
#include <string>
#include <stdint.h>
#include "../database/dab_database_types.h"

// Referring to database/dab_database_types.h
// Extended Country Code (ECC) = 8bits
// Country ID (CID) = 4bits
// Full ID = (ECC << 4) | CID
#define CODE(ECC,CID) (((ECC & 0xFF) << 4) | (CID & 0xF))

struct DAB_COUNTRY_NAME
{
  std::string fullname;
  std::string iso3166_alpha2;
  std::string iso3166_alpha3;
};

// DOC: ETSI TS 101 756
static const auto DAB_COUNTRY_TABLE = std::unordered_map<uint16_t, const DAB_COUNTRY_NAME>{
    // Table 3: ITU Region 1 (European broadcasting area)
    { CODE(0xE0,0x1), { "Germany", "DE", "DEU" }},
    { CODE(0xE0,0x2), { "Algeria", "DZ", "DZA" }},
    { CODE(0xE0,0x3), { "Andorra", "AD", "AND" }},
    { CODE(0xE0,0x4), { "Israel", "IL", "ISR" }},
    { CODE(0xE0,0x5), { "Italy", "IT", "ITA" }},
    { CODE(0xE0,0x6), { "Belgium", "BE", "BEL" }},
    { CODE(0xE0,0x7), { "Russian Federation", "RU", "RUS" }},
    { CODE(0xE0,0x8), { "Palestine", "PS", "PSE" }},
    { CODE(0xE0,0x9), { "Albania", "AL", "ALB" }},
    { CODE(0xE0,0xA), { "Austria", "AT", "AUT" }},
    { CODE(0xE0,0xB), { "Hungary", "HU", "HUN" }},
    { CODE(0xE0,0xC), { "Malta", "MT", "MLT" }},
    { CODE(0xE0,0xD), { "Germany", "DE", "DEU" }},
    { CODE(0xE0,0xF), { "Egypt", "EG", "EGY" }},
    { CODE(0xE1,0x1), { "Greece", "GR", "GRC" }},
    { CODE(0xE1,0x2), { "Cyprus", "CY", "CYP" }},
    { CODE(0xE1,0x3), { "San Marino", "SM", "SMR" }},
    { CODE(0xE1,0x4), { "Switzerland", "CH", "CHE" }},
    { CODE(0xE1,0x5), { "Jordan", "JO", "JOR" }},
    { CODE(0xE1,0x6), { "Finland", "FI", "FIN" }},
    { CODE(0xE1,0x7), { "Luxembourg", "LU", "LUX" }},
    { CODE(0xE1,0x8), { "Bulgaria", "BG", "BGR" }},
    { CODE(0xE1,0x9), { "Denmark", "DK", "DNK" }},
    // { CODE(0xE1,0x9), { "Faroe", "FO", "FRO" }},
    { CODE(0xE1,0xA), { "Gibraltar", "GI", "GIB" }},
    { CODE(0xE1,0xB), { "Iraq", "IQ", "IRQ" }},
    { CODE(0xE1,0xC), { "United Kingdom", "GB", "GBR" }},
    { CODE(0xE1,0xD), { "Libya", "LY", "LBY" }},
    { CODE(0xE1,0xE), { "Romania", "RO", "ROU" }},
    { CODE(0xE1,0xF), { "France", "FR", "FRA" }},
    { CODE(0xE2,0x1), { "Morocco", "MA", "MAR" }},
    { CODE(0xE2,0x2), { "Czech Republic", "CZ", "CZE" }},
    { CODE(0xE2,0x3), { "Poland", "PL", "POL" }},
    { CODE(0xE2,0x4), { "Vatican", "", "" }},
    { CODE(0xE2,0x5), { "Slovakia", "SK", "SVK" }},
    { CODE(0xE2,0x6), { "Syria", "SY", "SYR" }},
    { CODE(0xE2,0x7), { "Tunisia", "TN", "TUN" }},
    { CODE(0xE2,0x9), { "Liechtenstein", "LI", "LIE" }},
    { CODE(0xE2,0xA), { "Iceland", "IS", "ISL" }},
    { CODE(0xE2,0xB), { "Monaco", "MC", "MCO" }},
    { CODE(0xE2,0xC), { "Lithuania", "LT", "LTU" }},
    { CODE(0xE2,0xD), { "Serbia", "RS", "SRB" }},
    // { CODE(0xE2,0xE), { "Canary Islands", "", "" }},
    { CODE(0xE2,0xE), { "Spain", "ES", "ESP" }},
    { CODE(0xE2,0xF), { "Norway", "NO", "NOR" }},
    { CODE(0xE3,0x1), { "Montenegro", "ME", "MNE" }},
    { CODE(0xE3,0x2), { "Ireland", "IE", "IRL" }},
    { CODE(0xE3,0x3), { "Turkey", "TR", "TUR" }},
    { CODE(0xE3,0x5), { "Tajikistan", "TJ", "TJK" }},
    { CODE(0xE3,0x8), { "Netherlands", "NL", "NLD" }},
    { CODE(0xE3,0x9), { "Latvia", "LV", "LVA" }},
    { CODE(0xE3,0xA), { "Lebanon", "LB", "LBN" }},
    { CODE(0xE3,0xB), { "Azerbaijan", "AZ", "AZE" }},
    { CODE(0xE3,0xC), { "Croatia", "HR", "HRV" }},
    { CODE(0xE3,0xD), { "Kazakhstan", "KZ", "KAZ" }},
    { CODE(0xE3,0xE), { "Sweden", "SE", "SWE" }},
    { CODE(0xE3,0xF), { "Belarus", "BY", "BLR" }},
    { CODE(0xE4,0x1), { "Moldova", "MD", "MDA" }},
    { CODE(0xE4,0x2), { "Estonia", "EE", "EST" }},
    { CODE(0xE4,0x3), { "North Macedonia", "MK", "MKD" }},
    { CODE(0xE4,0x6), { "Ukraine", "UA", "UKR" }},
    { CODE(0xE4,0x7), { "Kosovo", "", "" }},
    // { CODE(0xE4,0x8), { "Azores", "", "" }},
    // { CODE(0xE4,0x8), { "Madeira", "", "" }},
    { CODE(0xE4,0x8), { "Portugal", "PT", "PRT" }},
    { CODE(0xE4,0x9), { "Slovenia", "SI", "SVN" }},
    { CODE(0xE4,0xA), { "Armenia", "AM", "ARM" }},
    { CODE(0xE4,0xB), { "Uzbekistan", "UZ", "UZB" }},
    { CODE(0xE4,0xC), { "Georgia", "GE", "GEO" }},
    { CODE(0xE4,0xE), { "Turkmenistan", "TM", "TKM" }},
    { CODE(0xE4,0xF), { "Bosnia Herzegovina", "BA", "BIH" }},
    { CODE(0xE5,0x3), { "Kyrgyzstan", "KG", "KGZ" }},

    // Table 4: ITU Region 1 (African broadcasting area)
    { CODE(0xD0,0x1), { "Cameroon", "CM", "CMR" }},
    { CODE(0xD0,0x2), { "Central African Republic", "CF", "CAF" }},
    { CODE(0xD0,0x3), { "Djibouti", "DJ", "DJI" }},
    { CODE(0xD0,0x4), { "Madagascar", "MG", "MDG" }},
    { CODE(0xD0,0x5), { "Mali", "ML", "MLI" }},
    { CODE(0xD0,0x6), { "Angola", "AO", "AGO" }},
    { CODE(0xD0,0x7), { "Equatorial Guinea", "GQ", "GNQ" }},
    { CODE(0xD0,0x8), { "Gabon", "GA", "GAB" }},
    { CODE(0xD0,0x9), { "Republic of Guinea", "GN", "GIN" }},
    { CODE(0xD0,0xA), { "South Africa", "ZA", "ZAF" }},
    { CODE(0xD0,0xB), { "Burkina Faso", "BF", "BFA" }},
    { CODE(0xD0,0xC), { "Congo", "CG", "COG" }},
    { CODE(0xD0,0xD), { "Togo", "TG", "TGO" }},
    { CODE(0xD0,0xE), { "Benin", "BJ", "BEN" }},
    { CODE(0xD0,0xF), { "Malawi", "MW", "MWI" }},
    { CODE(0xD1,0x1), { "Namibia", "NA", "NAM" }},
    { CODE(0xD1,0x2), { "Liberia", "LR", "LBR" }},
    { CODE(0xD1,0x3), { "Ghana", "GH", "GHA" }},
    { CODE(0xD1,0x4), { "Mauritania", "MR", "MRT" }},
    { CODE(0xD1,0x5), { "Sao Tome and Principe", "ST", "STP" }},
    { CODE(0xD1,0x6), { "Cape Verde", "CV", "CPV" }},
    { CODE(0xD1,0x7), { "Senegal", "SN", "SEN" }},
    { CODE(0xD1,0x8), { "Gambia", "GM", "GMB" }},
    { CODE(0xD1,0x9), { "Burundi", "BI", "BDI" }},
    { CODE(0xD1,0xA), { "Ascension Island", "SH", "SHN" }},
    { CODE(0xD1,0xB), { "Botswana", "BW", "BWA" }},
    { CODE(0xD1,0xC), { "Comoros", "KM", "COM" }},
    { CODE(0xD1,0xD), { "Tanzania", "TZ", "TZA" }},
    { CODE(0xD1,0xE), { "Ethiopia", "ET", "ETH" }},
    { CODE(0xD1,0xF), { "Nigeria", "NG", "NGA" }},
    { CODE(0xD2,0x1), { "Sierra Leone", "SL", "SLE" }},
    { CODE(0xD2,0x2), { "Zimbabwe", "ZW", "ZWE" }},
    { CODE(0xD2,0x3), { "Mozambique", "MZ", "MOZ" }},
    { CODE(0xD2,0x4), { "Uganda", "UG", "UGA" }},
    { CODE(0xD2,0x5), { "Swaziland", "SZ", "SWZ" }},
    { CODE(0xD2,0x6), { "Kenya", "KE", "KEN" }},
    { CODE(0xD2,0x7), { "Somalia", "SO", "SOM" }},
    { CODE(0xD2,0x8), { "Niger", "NE", "NER" }},
    { CODE(0xD2,0x9), { "Chad", "TD", "TCD" }},
    { CODE(0xD2,0xA), { "Guinea-Bissau", "GW", "GNB" }},
    { CODE(0xD2,0xB), { "Zaire", "CD", "COD" }},
    { CODE(0xD2,0xC), { "Cote d'Ivoire", "CI", "CIV" }},
    { CODE(0xD2,0xD), { "Zanzibar", "TZ", "TZA" }},
    { CODE(0xD2,0xE), { "Zambia", "ZM", "ZMB" }},
    { CODE(0xD3,0x3), { "Western Sahara", "EH", "ESH" }},
    { CODE(0xD3,0x5), { "Rwanda", "RW", "RWA" }},
    { CODE(0xD3,0x6), { "Lesotho", "LS", "LSO" }},
    { CODE(0xD3,0x8), { "Seychelles", "SC", "SYC" }},
    { CODE(0xD3,0xA), { "Mauritius", "MU", "MUS" }},
    { CODE(0xD3,0xC), { "Sudan", "SD", "SDN" }},
    // { CODE(0xE0,0x2), { "Algeria", "DZ", "DZA" }},
    // { CODE(0xE0,0xF), { "Egypt", "EG", "EGY" }},
    // { CODE(0xE1,0xD), { "Libya", "LY", "LBY" }},
    // { CODE(0xE2,0x1), { "Morocco", "MA", "MAR" }},
    // { CODE(0xE2,0x7), { "Tunisia", "TN", "TUN" }},
    // { CODE(0xE2,0xE), { "Canary Islands", "ES", "ESP" }},

    // Table 6: ITU Region 2 (North and South Americas)
    #define COUNTRY_A0 "United States of America"
    // #define COUNTRY_A0 "Puerto Rico"
    // #define COUNTRY_A0 "Virgin islands (USA)"
    { CODE(0xA0,0x1), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0x2), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0x3), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0x4), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0x5), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0x6), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0x7), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0x8), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0x9), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0xA), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0xB), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0xD), { COUNTRY_A0, "US", "USA" }},
    { CODE(0xA0,0xE), { COUNTRY_A0, "US", "USA" }},
    #undef COUNTRY_A0
    { CODE(0xA1,0xB), { "Canada", "CA", "CAN" }},
    { CODE(0xA1,0xC), { "Canada", "CA", "CAN" }},
    { CODE(0xA1,0xD), { "Canada", "CA", "CAN" }},
    { CODE(0xA1,0xE), { "Canada", "CA", "CAN" }},
    { CODE(0xA1,0xF), { "Greenland", "GL", "GRL" }},
    { CODE(0xA2,0x1), { "Anguilla", "AI", "AIA" }},
    { CODE(0xA2,0x2), { "Antigua and Barbuda", "AG", "ATG" }},
    { CODE(0xA2,0x3), { "Ecuador", "EC", "ECU" }},
    { CODE(0xA2,0x4), { "Falkland Islands", "FK", "FLK" }},
    { CODE(0xA2,0x5), { "Barbados", "BB", "BRB" }},
    { CODE(0xA2,0x6), { "Belize", "BZ", "BLZ" }},
    { CODE(0xA2,0x7), { "Cayman Islands", "KY", "CYM" }},
    { CODE(0xA2,0x8), { "Costa Rica", "CR", "CRI" }},
    { CODE(0xA2,0x9), { "Cuba", "CU", "CUB" }},
    { CODE(0xA2,0xA), { "Argentina", "AR", "ARG" }},
    { CODE(0xA2,0xB), { "Brazil", "BR", "BRA" }},
    { CODE(0xA2,0xC), { "Bermuda", "BM", "BMU" }},
    { CODE(0xA2,0xD), { "Netherlands Antilles", "", "" }},
    { CODE(0xA2,0xE), { "Guadeloupe", "GP", "GLP" }},
    { CODE(0xA2,0xF), { "Bahamas", "BS", "BHS" }},
    { CODE(0xA3,0x1), { "Bolivia", "BO", "BOL" }},
    { CODE(0xA3,0x2), { "Colombia", "CO", "COL" }},
    { CODE(0xA3,0x3), { "Jamaica", "JM", "JAM" }},
    { CODE(0xA3,0x4), { "Martinique", "MQ", "MTQ" }},
    { CODE(0xA3,0x6), { "Paraguay", "PY", "PRY" }},
    { CODE(0xA3,0x7), { "Nicaragua", "NI", "NIC" }},
    { CODE(0xA3,0x9), { "Panama", "PA", "PAN" }},
    { CODE(0xA3,0xA), { "Dominica", "DM", "DMA" }},
    { CODE(0xA3,0xB), { "Dominican Republic", "DO", "DOM" }},
    { CODE(0xA3,0xC), { "Chile", "CL", "CHL" }},
    { CODE(0xA3,0xD), { "Grenada", "GD", "GRD" }},
    { CODE(0xA3,0xE), { "Turks and Caicos islands", "TC", "TCA" }},
    { CODE(0xA3,0xF), { "Guyana", "GY", "GUY" }},
    { CODE(0xA4,0x1), { "Guatemala", "GT", "GTM" }},
    { CODE(0xA4,0x2), { "Honduras", "HN", "HND" }},
    { CODE(0xA4,0x3), { "Aruba", "AW", "ABW" }},
    { CODE(0xA4,0x5), { "Montserrat", "MS", "MSR" }},
    { CODE(0xA4,0x6), { "Trinidad and Tobago", "TT", "TTO" }},
    { CODE(0xA4,0x7), { "Peru", "PE", "PER" }},
    { CODE(0xA4,0x8), { "Suriname", "SR", "SUR" }},
    { CODE(0xA4,0x9), { "Uruguay", "UY", "URY" }},
    { CODE(0xA4,0xA), { "St. Kitts", "KN", "KNA" }},
    { CODE(0xA4,0xB), { "St. Lucia", "LC", "LCA" }},
    { CODE(0xA4,0xC), { "El Salvador", "SV", "SLV" }},
    { CODE(0xA4,0xD), { "Haiti", "HI", "HTI" }},
    { CODE(0xA4,0xE), { "Venezuela", "VE", "VEN" }},
    { CODE(0xA5,0xB), { "Mexico", "MX", "MEX" }},
    { CODE(0xA5,0xC), { "St. Vincent", "VC", "VCT" }},
    { CODE(0xA5,0xD), { "Mexico", "MX", "MEX" }},
    { CODE(0xA5,0xE), { "Mexico", "MX", "MEX" }},
    { CODE(0xA5,0xF), { "Mexico", "MX", "MEX" }},
    { CODE(0xA5,0xF), { "Virgin islands (British)", "VG", "VGB" }},
    { CODE(0xA6,0x3), { "Brazil", "BR", "BRA" }},
    { CODE(0xA6,0xC), { "Brazil", "BR", "BRA" }},
    { CODE(0xA6,0xD), { "Brazil", "BR", "BRA" }},
    { CODE(0xA6,0xF), { "St. Pierre and Miquelon", "PM", "SPM" }},

    // Table 7: ITU Region 3 (Asia and Pacific)
    { CODE(0xE1,0xB), { "Laos", "LA", "LAO" }},
    { CODE(0xF0,0x1), { "Australia (City Commerical/Community)", "AU", "AUS" }},
    { CODE(0xF0,0x2), { "Australia (Regional NSW/ACT)", "AU", "AUS" }},
    { CODE(0xF0,0x3), { "Australia (City National)", "AU", "AUS" }},
    { CODE(0xF0,0x4), { "Australia (Regional QLD)", "AU", "AUS" }},
    { CODE(0xF0,0x5), { "Australia (Regional SA/NT)", "AU", "AUS" }},
    { CODE(0xF0,0x6), { "Australia (Regional WA)", "AU", "AUS" }},
    { CODE(0xF0,0x7), { "Australia (Regional VIC/TAS)", "AU", "AUS" }},
    { CODE(0xF0,0x8), { "Australia (Regional Future)", "AU", "AUS" }},
    { CODE(0xF0,0x9), { "Vanuatu", "VU", "VUT" }},
    { CODE(0xF0,0xA), { "Yemen", "YE", "YEM" }},
    { CODE(0xF0,0xB), { "Sri Lanka", "LK", "LKA" }},
    { CODE(0xF0,0xC), { "Brunei Darussalam", "BN", "BRN" }},
    { CODE(0xF0,0xD), { "Japan", "JP", "JPN" }},
    { CODE(0xF0,0xE), { "Fiji", "FJ", "FJI" }},
    { CODE(0xF0,0xF), { "Iran", "IR", "IRN" }},
    { CODE(0xF1,0x1), { "Korea (South)", "KR", "KOR" }},
    { CODE(0xF1,0x2), { "Cambodia", "KH", "KHM" }},
    { CODE(0xF1,0x3), { "Hong Kong", "HK", "HKG" }},
    { CODE(0xF1,0x4), { "Solomon Islands", "SB", "SLB" }},
    { CODE(0xF1,0x5), { "Bahrain", "BH", "BHR" }},
    { CODE(0xF1,0x6), { "Western Samoa", "WS", "WSM" }},
    { CODE(0xF1,0x7), { "Taiwan", "TW", "TWN" }},
    { CODE(0xF1,0x8), { "Malaysia", "MY", "MYS" }},
    { CODE(0xF1,0x9), { "Singapore", "SG", "SGP" }},
    { CODE(0xF1,0xA), { "Pakistan", "PK", "PAK" }},
    { CODE(0xF1,0xB), { "China", "CN", "CHN" }},
    { CODE(0xF1,0xC), { "Myanmar (Burma)", "MM", "MMR" }},
    { CODE(0xF1,0xD), { "Nauru", "NR", "NRU" }},
    { CODE(0xF1,0xE), { "Kiribati", "KI", "KIR" }},
    { CODE(0xF1,0xF), { "Bangladesh", "BD", "BGD" }},
    { CODE(0xF2,0x1), { "Vietnam", "VN", "VNM" }},
    { CODE(0xF2,0x2), { "Philippines", "PH", "PHL" }},
    { CODE(0xF2,0x3), { "Bhutan", "BT", "BTN" }},
    { CODE(0xF2,0x4), { "Oman", "OM", "OMN" }},
    { CODE(0xF2,0x5), { "Nepal", "NP", "NPL" }},
    { CODE(0xF2,0x6), { "United Arab Emirates", "AE", "ARE" }},
    { CODE(0xF2,0x7), { "Kuwait", "KW", "KWT" }},
    { CODE(0xF2,0x8), { "Qatar", "QA", "QAT" }},
    { CODE(0xF2,0x9), { "Korea (North)", "KP", "PRK" }},
    { CODE(0xF2,0xA), { "New Zealand", "NZ", "NZL" }},
    { CODE(0xF2,0xB), { "Tonga", "TO", "TON" }},
    { CODE(0xF2,0xC), { "Micronesia", "FM", "FSM" }},
    { CODE(0xF2,0xD), { "Macau", "MO", "MAC" }},
    { CODE(0xF2,0xE), { "India", "IN", "IND" }},
    { CODE(0xF2,0xF), { "Saudi Arabia", "SA", "SAU" }},
    { CODE(0xF3,0x1), { "Iraq", "IQ", "IRQ" }},
    { CODE(0xF3,0x2), { "Mongolia", "MN", "MNG" }},
    { CODE(0xF3,0x3), { "Maldives", "MV", "MDV" }},
    { CODE(0xF3,0x9), { "Papua New Guinea", "PG", "PNG" }},
    { CODE(0xF3,0xB), { "Afghanistan", "AF", "AFG" }},
    { CODE(0xF3,0xE), { "Indonesia", "ID", "IDN" }},
    { CODE(0xF3,0xF), { "Thailand", "TH", "THA" }},
};

#undef CODE

enum class CountryNameType : uint8_t
{
  FULLNAME,
  ISO3166_ALPHA2,
  ISO3166_ALPHA3
};

static const std::string& GetCountryName(extended_country_id_t ecc,
                                         country_id_t country_id,
                                         CountryNameType type = CountryNameType::FULLNAME) {
    static const auto DEFAULT_RETURN = std::string("Undefined");
    const uint16_t key = ((ecc & 0xFF) << 4) | (country_id & 0xF);
    auto res = DAB_COUNTRY_TABLE.find(key);
    if (res == DAB_COUNTRY_TABLE.end()) {
        return DEFAULT_RETURN;
    }
    if (type == CountryNameType::ISO3166_ALPHA2)
      return res->second.iso3166_alpha2;
    if (type == CountryNameType::ISO3166_ALPHA3)
      return res->second.iso3166_alpha3;
    return res->second.fullname;
}
